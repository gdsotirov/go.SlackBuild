#!/bin/sh
#
# Slackware build script for Google Go
# Copyright (C) 2014-2016 Georgi D. Sotirov <gdsotirov@dir.bg>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at http://sotirov-bg.net/slackpack/
#
# $Id: go.SlackBuild,v 1.7 2016/12/02 08:06:21 gsotirov Exp $
#

. ../../slack-package.conf

NAME=go
VERSION=1.7.4
ARCH=${ARCH:-i586}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

PKG=$TMP/package-${NAME}
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi

# Extract the source
cd $TMP
export GOROOT="$PKG/usr/lib${LIBDIRSUFFIX}/${NAME}${VERSION}"
mkdir -p $GOROOT
cd $GOROOT
tar -xvf $CWD/${NAME}${VERSION}.src.tar.gz || exit 3
fix_source

# Apply patch(es)
if [ -e $CWD/${NAME}-${VERSION}.diff ]; then
  cd go
  patch -p1 -b -z.orig < $CWD/${NAME}-${VERSION}.diff || exit 4
  cd ..
fi

# Use gcc-go compiler
export GOROOT_BOOTSTRAP="/usr"
export GOROOT_FINAL="/usr/lib${LIBDIRSUFFIX}/${NAME}${VERSION}/${NAME}"

# Build & install
cd $GOROOT/go/src
CGO_ENABLED=1 \
./all.bash || exit 5

# Build shared lib
GOROOT=${GOROOT}/go \
$GOROOT/go/bin/go install -buildmode=shared -linkshared std || exit 6

# Create profile scripts to properly set env variables
PROFILE_DIR=$PKG/etc/profile.d
mkdir -p $PROFILE_DIR
cat > $PROFILE_DIR/go.csh << EOF
#!/bin/csh
setenv GOROOT ${GOROOT_FINAL}
setenv PATH \${PATH}:\${GOROOT}/bin
EOF
cat > $PROFILE_DIR/go.sh << EOF
#!/bin/sh
export GOROOT="${GOROOT_FINAL}"
export PATH="\${PATH}:\${GOROOT}/bin"
EOF

chmod 0755 $PROFILE_DIR/go.csh
chmod 0755 $PROFILE_DIR/go.sh

# Prepare
bin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
DOCFILES="$DOCFILES CONTRIB* PATENTS"
( cd $GOROOT/go; create_docs $PKG ${NAME}-${VERSION} )
( cd $PKG/usr/doc/${NAME}-${VERSION}; mv LICENSE COPYING; mv README.md README )

mkdir -p $PKG/install
install -m 644 $CWD/slack-desc     $PKG/install/slack-desc
install -m 644 $CWD/slack-required $PKG/install/slack-required

SBDIR=$PKG/usr/src/slackbuilds/${NAME}-${VERSION}
mkdir -p $SBDIR
install -m 644 $CWD/slack-desc         $SBDIR/slack-desc
install -m 644 $CWD/slack-required     $SBDIR/slack-required
if [ -e $CWD/${NAME}-${VERSION}.diff ]; then
  install -m 644 $CWD/${NAME}-${VERSION}.diff $SBDIR/${NAME}-${VERSION}.diff
fi
install -m 644 $CWD/${NAME}.SlackBuild $SBDIR/${NAME}.SlackBuild

# Assemble
cd $PKG
PKGNAME=${NAME}-${VERSION}-${ARCH}-${BUILD}${MYIN}
makepkg -l y -c n $PKG_DIR/${PKGNAME}.txz
cd $PKG_DIR
md5sum ${PKGNAME}.txz > ${PKGNAME}.txz.md5
cat $PKG/install/slack-desc > $PKG_DIR/${PKGNAME}.txt

# Cleanup
if [ "$1" == "--cleanup" ]; then
  rm -r $PKG
fi

